generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  nickname  String
  role      Role?     @default(Player)
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  roomId    Int?
  Room      Room?     @relation(fields: [roomId], references: [id])
  bannerId  Int?
  Banner    Banner?   @relation(fields: [bannerId], references: [id])
  stats     UserStats?
}

model UserStats {
  id        Int      @id @default(autoincrement())
  kills     Int      @default(0)
  deaths    Int      @default(0)
  headshots Int      @default(0)
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])
}

model Room {
  id         Int      @id @default(autoincrement())
  maxPlayers Int
  status     Status?  @default(Waiting)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  players    User[]
}

model Banner {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  imageUrl    String // URL de l'image de la bannière
  isAvailable Boolean  @default(true) // Indique si la bannière est disponible ou non
  users       User[]
}

enum Role {
  SuperAdmin
  Admin
  Mod
  Player
}

enum Status {
  Waiting
  InProgress
  Finished
}
